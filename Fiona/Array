Function of Javascript Aarry:
//the same as var car = new Array ("BMW", "Volve", "Saab");
var [cars] = [ "BMW", "Volve", "Saab" ]; 

理解难点：
连续的内存空间和想同类型的数据，这两个限制让数组的很多操作变得低效：比如想要在数组中删除、插入一个数据，为了保证连续性，就需要做大量的数据搬移工作--找例子；
好处是随机访问；数组适合查找；根据下表随机访问的时间复杂度为O(1);

当计算机需要随机访问数组中的某个元素时，首先通过寻址公式，计算该元素存储的内存地址；

改善数组"插入"和的效率方法-由O(n)转到O（1); 应用例子：JVM表记清除垃圾回收算法；

警惕数组访问越界；

容器能否完全替代数组？
